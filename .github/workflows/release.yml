name: Build and Release

on:
  push:
    branches:
      - main
      - dev
  workflow_dispatch:

jobs:
  compute-version:
    runs-on: ubuntu-latest

    steps:
      - name: Compute version and release type
        id: version
        run: |
          if [[ "${GITHUB_REF_TYPE}" == "tag" ]]; then
            VER="${GITHUB_REF_NAME}"
            RELEASE="true"
          else
            VER="sha-${GITHUB_SHA::8}"
            RELEASE="false"
          fi
          echo "VER=$VER"
          echo "ver=$VER" >> $GITHUB_OUTPUT
          echo "RELEASE=$RELEASE"
          echo "release=$RELEASE" >> $GITHUB_OUTPUT

    outputs:
      ver: ${{ steps.version.outputs.ver  }}
      release: ${{ steps.version.outputs.release }}

  build:
    runs-on: ubuntu-latest
    needs:
      - compute-version

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

# xorg dependency is necessary for blender gltf export to work https://github.com/godotengine/godot/issues/89767
      - name: Install APT dependencies
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: xorg
          version: 1.0

      - name: Install other dependencies
        env:
          GODOT_VERSION: 4.5-stable
          BLENDER_VERSION: 4.5.3
        run: |
          mkdir ./.vendor
          cd ./.vendor

          wget -nv https://github.com/godotengine/godot-builds/releases/download/${GODOT_VERSION}/Godot_v${GODOT_VERSION}_linux.x86_64.zip
          unzip Godot_v${GODOT_VERSION}_linux.x86_64.zip
          mv Godot_v${GODOT_VERSION}_linux.x86_64 godot
          chmod +x godot

          wget -nv https://github.com/godotengine/godot-builds/releases/download/${GODOT_VERSION}/Godot_v${GODOT_VERSION}_export_templates.tpz
          mkdir -p ~/.local/share/godot/export_templates/${GODOT_VERSION//-/.}
          unzip Godot_v${GODOT_VERSION}_export_templates.tpz
          mv templates/* ~/.local/share/godot/export_templates/${GODOT_VERSION//-/.}/

          wget -nv https://mirrors.dotsrc.org/blender/blender-release/Blender4.5/blender-${BLENDER_VERSION}-linux-x64.tar.xz
          tar -xvf blender-${BLENDER_VERSION}-linux-x64.tar.xz
          mv blender-${BLENDER_VERSION}-linux-x64 blender

      - name: Build project
        run: |
          cd ${GITHUB_WORKSPACE}
          mkdir -p ~/.config/godot/
          cat >> ~/.config/godot/editor_settings-4.5.tres <<EOF
          [gd_resource type="EditorSettings" load_steps=2 format=3]

          [resource]
          filesystem/import/blender/blender_path = "${GITHUB_WORKSPACE}/.vendor/blender/blender"
          filesystem/import/blender/rpc_port = 0
          EOF

          mkdir ./.dist
          ./.vendor/godot --headless --verbose --export-release "Linux Server" ".dist/linux-dedicated_${{ needs.compute-version.outputs.ver }}.x86_64"
          ./.vendor/godot --headless --verbose --export-release "Linux Desktop" ".dist/bevryust-online_${{ needs.compute-version.outputs.ver }}.x86_64"
          ./.vendor/godot --headless --verbose --export-release "Windows Desktop" ".dist/bevryust-online_${{ needs.compute-version.outputs.ver }}.exe"
          ls -lh ./.dist

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-output-${{ needs.compute-version.outputs.ver }}
          path: .dist
          if-no-files-found: "error"
          include-hidden-files: "true"

  publish:
    runs-on: ubuntu-latest
    needs:
      - compute-version
      - build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Download build artifacts
        uses: actions/download-artifact@v5
        with:
          name: build-output-${{ needs.compute-version.outputs.ver }}
          path: ./.dist

      - name: Login into ghcr.io registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./dockerfiles/Server.dockerfile
          build-args: |
            VER=${{ needs.compute-version.outputs.ver }}
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:${{ needs.compute-version.outputs.ver }}
            ${{ needs.compute-version.outputs.release == 'true' && 'ghcr.io/${{ github.repository }}:latest' || ''}}

      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.compute-version.outputs.ver }}
          name: "${{ needs.compute-version.outputs.ver }}"
          body: "Release ${{ needs.compute-version.outputs.ver }}"
          draft: false
          prerelease: ${{ needs.compute-version.outputs.release == 'false' }}
          make_latest: "${{ needs.compute-version.outputs.release == 'true' }}"
          files: |
            ./.dist/*
