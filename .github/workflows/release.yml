name: Build and Release

on:
  push:
    branches:
      - release
    tags:
      - "*"
  workflow_dispatch:

jobs:
  compute-version:
    runs-on: ubuntu-latest

    steps:
      - name: Compute version and release type
        id: version
        run: |
          if [[ "${GITHUB_REF_TYPE}" == "tag" ]]; then
            VER="${GITHUB_REF_NAME}"
            RELEASE="true"
          else
            VER="${GITHUB_SHA::8}"
            RELEASE="true"
          fi
          echo "VER=$VER"
          echo "ver=$VER" >> $GITHUB_OUTPUT
          echo "RELEASE=$RELEASE"
          echo "release=$RELEASE" >> $GITHUB_OUTPUT

    outputs:
      ver: ${{ steps.version.outputs.ver  }}
      release: ${{ steps.version.outputs.release }}

  build:
    runs-on: ubuntu-latest
    needs:
      - compute-version
    permissions:
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Login into ghcr.io registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build builder image
        uses: docker/build-push-action@v6
        with:
          file: ./Dockerfile
          target: builder-base
          tags: builder-base:latest
          cache-from: type=registry,ref=ghcr.io/${{ github.repository }}/builder-base:cache
          cache-to: type=registry,ref=ghcr.io/${{ github.repository }}/builder-base:cache,mode=max
          push: false
          load: true

      - name: Build Desktop
        run: |
          mkdir .dist
          echo "::group::Build Windows Desktop"
          docker run --rm \
            -v ${GITHUB_WORKSPACE}:/GIGABAH \
            -w /GIGABAH \
            builder-base:latest \
            sh -c "godot --headless --verbose --export-release 'Windows Desktop'"
          echo "::endgroup::"
          echo "::group::Build Linux Desktop"
          docker run --rm \
            -v ${GITHUB_WORKSPACE}:/GIGABAH \
            -w /GIGABAH \
            builder-base:latest \
            sh -c "godot --headless --verbose --export-release 'Linux Desktop'"
          echo "::endgroup::"
          echo "::group::Build Mac OS Desktop"
          docker run --rm \
            -v ${GITHUB_WORKSPACE}:/GIGABAH \
            -w /GIGABAH \
            builder-base:latest \
            sh -c "godot --headless --verbose --export-release 'macOS Desktop'"
          echo "::endgroup::"
          ls -lh ./.dist

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-output-${{ needs.compute-version.outputs.ver }}
          path: .dist
          if-no-files-found: "error"
          include-hidden-files: "true"

      - name: Build and push Dedicated Server docker image
        uses: docker/build-push-action@v6
        with:
          file: ./Dockerfile
          cache-from: type=registry,ref=ghcr.io/${{ github.repository }}/builder-base:cache
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:${{ needs.compute-version.outputs.ver }}
            ${{ needs.compute-version.outputs.release == 'true' && format('ghcr.io/{0}:latest', github.repository) || '' }}

  release:
    runs-on: ubuntu-latest
    needs:
      - compute-version
      - build
    permissions:
      contents: write

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v5
        with:
          name: build-output-${{ needs.compute-version.outputs.ver }}
          path: ./.dist

      - name: Add version to build artifacts
        run: |
          for f in ./.dist/*; do
            base="${f%.*}"
            ext="${f##*.}"
            mv "$f" "${base}_${{ needs.compute-version.outputs.ver }}.${ext}"
          done

      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.compute-version.outputs.ver }}
          name: "${{ needs.compute-version.outputs.ver }}"
          body: |
            Release ${{ needs.compute-version.outputs.ver }}

            | File | Download |
            |------|----------|
            | Windows Desktop | [gigabah_${{ needs.compute-version.outputs.ver }}.exe](https://github.com/${{ github.repository }}/releases/download/${{ needs.compute-version.outputs.ver }}/gigabah_${{ needs.compute-version.outputs.ver }}.exe) |
            | Linux Desktop | [gigabah_${{ needs.compute-version.outputs.ver }}.x86_64](https://github.com/${{ github.repository }}/releases/download/${{ needs.compute-version.outputs.ver }}/gigabah_${{ needs.compute-version.outputs.ver }}.x86_64) |
            | macOS Desktop | [gigabah_${{ needs.compute-version.outputs.ver }}.zip](https://github.com/${{ github.repository }}/releases/download/${{ needs.compute-version.outputs.ver }}/gigabah_${{ needs.compute-version.outputs.ver }}.zip) |
            | Docker Server | `docker pull ghcr.io/${{ github.repository }}:${{ needs.compute-version.outputs.ver }}` |
          draft: false
          prerelease: ${{ needs.compute-version.outputs.release == 'false' }}
          make_latest: "${{ needs.compute-version.outputs.release == 'true' }}"
          files: |
            ./.dist/*
